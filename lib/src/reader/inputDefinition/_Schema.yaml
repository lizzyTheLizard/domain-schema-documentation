$id: _Schema.yaml
$schema: http://json-schema.org/draft-07/schema#
title: Schema Definition
type: object
allOf:
# A schema must be a definition and have some additional top level properties
- $ref: './_Definition.yaml'
- properties:
    schema:
      type: string
      const: 'http://json-schema.org/draft-07/schema#'
    x-schema-type:
      type: string
      enum:
      - Aggregate
      - Entity
      - ValueObject
      - ReferenceData
      - Other
    x-todos:
      type: array
      items:
        type: string
    x-links:
      type: array
      items:
        $ref: './_Link.yaml'
    x-tags:
      type: array
      items:
        $ref: './_Tag.yaml'
    x-errors:
      type: array
      items:    
        $ref: './_Error.yaml'
  required:
  - $id
  - x-schema-type
  - title
# Must be either an enum, object or interface
- type: object
  oneOf:
  - properties:
      type:
        const: 'object'
    anyOf:
    - required:
      - oneOf
    - required:
      - properties
  - properties:
      type:
        const: 'string'
    required:
      - enum
